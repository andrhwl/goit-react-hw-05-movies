{"version":3,"file":"static/js/837.e35804cb.chunk.js","mappings":"+SAKAA,EAAAA,EAAAA,SAAAA,QCJiB,+BDKjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QCPc,mCDQdC,OAAO,EACPC,SAAU,SAIL,IAAMC,EAAiB,mCAAG,sGACRJ,EAAAA,EAAAA,IAAU,uBADF,uBACvBK,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAOjBC,EAAY,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACHT,EAAAA,EAAAA,IAAA,8BAAiCQ,EAAjC,iBAA+CC,IAD5C,uBAClBJ,EADkB,EAClBA,KADkB,kBAGnBA,EAAKC,SAHc,2CAAH,sDAOZI,EAAe,mCAAG,WAAMC,GAAN,yFACNX,EAAAA,EAAAA,IAAA,iBAAoBW,IADd,uBACrBN,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAOfO,EAAe,mCAAG,WAAMD,GAAN,yFACNX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAOfQ,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,qD,mEEvCb,SAASS,EAAT,GAA0C,IAAZC,EAAW,EAAXA,QAC3C,OACE,0BACE,uBAAIA,KAGT,C,6HCNc,SAASC,EAAT,GAAsC,IAAZC,EAAW,EAAXA,QACvC,OACE,0BACE,wBACGA,EAAQC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,0BAAOD,KACP,0BACE,0BAAM,cACLC,OAJIF,EAQZ,OAIR,CCdD,IAgCA,EAhCgB,WACd,IAAQR,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAA8BY,EAAAA,EAAAA,YAA9B,eAAON,EAAP,KAAgBO,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,YAA1B,eAAOE,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,YACRd,EAAAA,EAAAA,IAAgBF,GACbiB,MAAK,SAAAvB,GACJ,GAA4B,IAAxBA,EAAKC,QAAQuB,OAAjB,CAMA,IAAMC,EAAczB,EAAKC,QAAQY,KAAI,kBAA8B,CACjEC,GADmC,EAAGA,GAEtCC,OAFmC,EAAOA,OAG1CC,QAHmC,EAAeA,QAAf,IAKrCG,EAAWM,EARV,MAFCJ,EAAS,2CAWZ,IACAK,OAAM,SAAAN,GAAK,OAAIC,EAASD,EAAMV,QAAnB,GACf,GAAE,CAACJ,KAGF,2BACGc,IAAS,SAAC,IAAD,CAAoBV,QAASU,IACtCR,IAAW,SAACD,EAAD,CAAgBC,QAASA,MAG1C,C","sources":["Services/Api.js","Services/Api-key.js","components/ErrorOccurred.jsx","components/ReviewsContent.jsx","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY, BASE_URL } from './Api-key';\n// https://api.themoviedb.org/3/movie/550?api_key=839ee1ac45e2249141bd738796b376ad пример исп-я\n\n// https://drive.google.com/file/d/1vR0hi3n1236Q5Bg4-se-8JVKD9UKSfId/view    ссылка на превью ДЗ\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  adult: false,\n  language: 'en-US',\n};\n\n// ! ====== for component Home popular movies ======\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n\n  return data.results;\n};\n\n// ! ====== for component Movies search movies ======\nexport const searchMovies = async (query, page = 1) => {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=${page}`);\n\n  return data.results;\n};\n\n// ! ====== for details info about movie ======\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`);\n\n  return data;\n};\n\n// ! ====== get info about the cast of movie ======\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n\n  return data;\n};\n\n// ! ====== get info about the rewiews of movie ======\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n\n  return data;\n};\n","const API_KEY = '839ee1ac45e2249141bd738796b376ad';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport { API_KEY, BASE_URL };\n","import PropTypes from 'prop-types';\n\nexport default function ErrorMessageToUser({ message }) {\n  return (\n    <div>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nErrorMessageToUser.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function ReviewsContent({ reviews }) {\n  return (\n    <div>\n      <ul>\n        {reviews.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <span>{author}</span>\n              <p>\n                <span>Reviews: </span>\n                {content}\n              </p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nReviewsContent.propTypes = {\n  reviews: PropTypes.array.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'Services/Api';\nimport ErrorMessageToUser from './ErrorOccurred';\nimport ReviewsContent from './ReviewsContent';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(data => {\n        if (data.results.length === 0) {\n          setError('We don`t have any reviews for this movie');\n          return;\n        }\n\n        // prepare info about reviews\n        const reviewsInfo = data.results.map(({ id, author, content }) => ({\n          id,\n          author,\n          content,\n        }));\n        setReviews(reviewsInfo);\n      })\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <ErrorMessageToUser message={error} />}\n      {reviews && <ReviewsContent reviews={reviews} />}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","api_key","adult","language","getTrendingMovies","data","results","searchMovies","query","page","getMovieDetails","movieId","getMovieCredits","getMovieReviews","ErrorMessageToUser","message","ReviewsContent","reviews","map","id","author","content","useParams","useState","setReviews","error","setError","useEffect","then","length","reviewsInfo","catch"],"sourceRoot":""}