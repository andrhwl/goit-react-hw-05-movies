{"version":3,"file":"static/js/48.fbd6a1a9.chunk.js","mappings":"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","sources":["components/MovieDetailPage/MovieDetailPage.styled.js","components/MovieDetailPage/MovieDetailPage.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","Pages/MovieDetails/MovieDetails.jsx","Pages/MovieDetails/MovieDetails.styled.js","Services/Api.js","Services/Api-key.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nexport const OneMovieTopContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n`;\n\nexport const OneMovieImg = styled.img`\n  width: 350px;\n`;\n\nexport const OneMovieSpan = styled.span`\n  font-weight: bold;\n  margin-top: 20px;\n  margin-bottom: 5px;\n  display: inline-block;\n  margin-right: 10px;\n`;\n\nexport const OneMovieInfo = styled.p`\n  font-weight: 700;\n  padding: 20px;\n  font-size: 20px;\n`;\n\nexport const OneMovieLi = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const OneMovieCast = styled(NavLink)`\n  font-weight: 600;\n  font-size: 20px;\n  margin-left: 20px;\n`;\n","import { Outlet, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '../Loader';\nimport {\n  OneMovieCast,\n  OneMovieImg,\n  OneMovieInfo,\n  OneMovieLi,\n  OneMovieSpan,\n  OneMovieTopContainer,\n} from './MovieDetailPage.styled';\n\nexport default function MovieDetailPage({ data }) {\n  const {\n    original_title,\n    title,\n    genres,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n  } = data;\n\n  // Prepear data for render\n  const rating = Math.round(vote_average * 10);\n  const date = release_date.slice(0, 4);\n  const genresArray = genres.map(gen => gen.name).join(', ');\n  const location = useLocation();\n\n  return (\n    <div>\n      <OneMovieTopContainer>\n        <OneMovieImg\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : `https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/No-image-available.jpg/640px-No-image-available.jpg`\n          }\n          alt={title}\n        />\n        <div>\n          <h1>\n            {original_title ? original_title : 'There should have been a title'}\n          </h1>\n          <div>\n            <p>\n              <OneMovieSpan>Rating:</OneMovieSpan>\n              {rating ? rating : 'Absent'}\n            </p>\n            <p>\n              <OneMovieSpan>Release date:</OneMovieSpan>\n              {date ? date : 'Absent'}\n            </p>\n            <p>\n              <OneMovieSpan>Genre:</OneMovieSpan>\n              {genresArray ? genresArray : 'Repeated'}\n            </p>\n            <p>\n              <OneMovieSpan>Description: </OneMovieSpan>\n            </p>\n          </div>\n          {overview\n            ? overview\n            : 'There should have been a description here, but it is better to see once than to read a hundred times.'}\n        </div>\n      </OneMovieTopContainer>\n      <div>\n        <OneMovieInfo>Additional information</OneMovieInfo>\n      </div>\n      <ul>\n        <OneMovieLi>\n          <OneMovieCast to=\"cast\" state={location.state}>\n            Cast &#10140;\n          </OneMovieCast>\n        </OneMovieLi>\n        <OneMovieLi>\n          <OneMovieCast to=\"reviews\" state={location.state}>\n            Reviews &#10140;\n          </OneMovieCast>\n        </OneMovieLi>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n\nMovieDetailPage.propTypes = {\n  data: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackBtn = styled(NavLink)`\n  font-size: 25px;\n  padding: 10px;\n  display: block;\n  font-weight: 600;\n`;\n","import PropTypes from 'prop-types';\nimport { BackBtn } from './Button.styled';\n\nexport default function Button({ location }) {\n  return (\n    <>\n      <BackBtn to={location}> &#129144; Back to</BackBtn>\n    </>\n  );\n}\n\nButton.propTypes = {\n  location: PropTypes.any.isRequired,\n};\n","import { useEffect, useState, useRef } from 'react';\nimport { getMovieDetails } from 'Services/Api';\nimport { useParams } from 'react-router-dom';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport MovieDetailPage from 'components/MovieDetailPage/MovieDetailPage';\nimport Loader from 'components/Loader';\nimport Button from 'components/Button/Button';\nimport { StyledMain } from './MovieDetails.styled';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetailPage, setMovieDetailPage] = useState();\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(STATUS.IDLE);\n\n  const location = useLocation();\n  const backLink = useRef(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    const detailInfo = async () => {\n      setStatus(STATUS.PENDING);\n\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovieDetailPage(data);\n        setStatus(STATUS.RESOLVED);\n        setError('');\n      } catch (error) {\n        setStatus(STATUS.REJECTED);\n        setError(error.message);\n      }\n    };\n    detailInfo();\n  }, [movieId, setMovieDetailPage]);\n\n  return (\n    <StyledMain>\n      <div>\n        <Button location={backLink.current} />\n        {error && <Navigate to=\"/\" replace />}\n        {status === STATUS.PENDING && <Loader />}\n        {movieDetailPage && <MovieDetailPage data={movieDetailPage} />}\n      </div>\n    </StyledMain>\n  );\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const StyledMain = styled.main`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 15px;\n`;\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from './Api-key';\n// https://api.themoviedb.org/3/movie/550?api_key=839ee1ac45e2249141bd738796b376ad пример исп-я\n\n// https://drive.google.com/file/d/1vR0hi3n1236Q5Bg4-se-8JVKD9UKSfId/view    ссылка на превью ДЗ\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  adult: false,\n  language: 'en-US',\n};\n\n// ! ====== for component Home popular movies ======\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n\n  return data.results;\n};\n\n// ! ====== for component Movies search movies ======\nexport const searchMovies = async (query, page = 1) => {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=${page}`);\n\n  return data.results;\n};\n\n// ! ====== for details info about movie ======\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`);\n\n  return data;\n};\n\n// ! ====== get info about the cast of movie ======\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n\n  return data;\n};\n\n// ! ====== get info about the rewiews of movie ======\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n\n  return data;\n};\n","const API_KEY = '839ee1ac45e2249141bd738796b376ad';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport { API_KEY, BASE_URL };\n"],"names":["OneMovieTopContainer","styled","OneMovieImg","OneMovieSpan","OneMovieInfo","OneMovieLi","OneMovieCast","NavLink","MovieDetailPage","data","original_title","title","genres","overview","poster_path","release_date","vote_average","rating","Math","round","date","slice","genresArray","map","gen","name","join","location","useLocation","src","alt","to","state","Suspense","fallback","Loader","BackBtn","Button","STATUS","movieId","useParams","useState","movieDetailPage","setMovieDetailPage","error","setError","status","setStatus","backLink","useRef","from","useEffect","detailInfo","getMovieDetails","message","current","replace","StyledMain","axios","api_key","adult","language","getTrendingMovies","results","searchMovies","query","page","getMovieCredits","getMovieReviews"],"sourceRoot":""}