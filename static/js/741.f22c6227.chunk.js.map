{"version":3,"file":"static/js/741.f22c6227.chunk.js","mappings":"+SAKAA,EAAAA,EAAAA,SAAAA,QCJiB,+BDKjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QCPc,mCDQdC,OAAO,EACPC,SAAU,SAIL,IAAMC,EAAiB,mCAAG,sGACRJ,EAAAA,EAAAA,IAAU,uBADF,uBACvBK,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAOjBC,EAAY,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACHT,EAAAA,EAAAA,IAAA,8BAAiCQ,EAAjC,iBAA+CC,IAD5C,uBAClBJ,EADkB,EAClBA,KADkB,kBAGnBA,EAAKC,SAHc,2CAAH,sDAOZI,EAAe,mCAAG,WAAMC,GAAN,yFACNX,EAAAA,EAAAA,IAAA,iBAAoBW,IADd,uBACrBN,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAOfO,EAAe,mCAAG,WAAMD,GAAN,yFACNX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAOfQ,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,qD,+HEvCfS,E,OAAWC,GAAAA,GAAH,kG,SCCN,SAASC,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAChC,OACE,SAACH,EAAD,UACGG,EAAQC,KAAI,YAAgC,IAA7BC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACxB,OACE,2BACE,gBACEC,IACED,EAAW,yCAC2BA,GAD3B,gHAIbE,IAAKH,KAGP,wBAAKA,GAAc,oBAVZD,EAaZ,KAGN,CClBD,IAgCA,EAhCa,WACX,IAAQR,GAAYa,EAAAA,EAAAA,MAAZb,QACR,GAA8Bc,EAAAA,EAAAA,YAA9B,eAAOR,EAAP,KAAgBS,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,YAA1B,eAAOE,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,YACRjB,EAAAA,EAAAA,IAAgBD,GACbmB,MAAK,SAAAzB,GACJ,GAAoB,IAAhBA,EAAK0B,OAAT,CAKA,IAAMC,EAAW3B,EAAK4B,KAAKf,KAAI,kBAAiC,CAC9DC,GAD6B,EAAGA,GAEhCC,KAF6B,EAAOA,KAGpCC,YAH6B,EAAaa,aAAb,IAM/BR,EAAWM,EARV,MAFCJ,EAAS,yCAWZ,IACAO,OAAM,SAAAR,GAAK,OAAIC,EAASD,EAAMS,QAAnB,GACf,GAAE,CAACzB,KAGF,2BACGgB,IAAS,SAAC,IAAD,CAAoBS,QAAST,IACtCV,IAAW,SAACD,EAAD,CAASC,QAASA,MAGnC,C,mEClCc,SAASoB,EAAT,GAA0C,IAAZD,EAAW,EAAXA,QAC3C,OACE,0BACE,uBAAIA,KAGT,C","sources":["Services/Api.js","Services/Api-key.js","components/Credits/Credits.styled.js","components/Credits/Credits.jsx","components/Cast.jsx","components/ErrorOccurred.jsx"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY, BASE_URL } from './Api-key';\n// https://api.themoviedb.org/3/movie/550?api_key=839ee1ac45e2249141bd738796b376ad пример исп-я\n\n// https://drive.google.com/file/d/1vR0hi3n1236Q5Bg4-se-8JVKD9UKSfId/view    ссылка на превью ДЗ\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  adult: false,\n  language: 'en-US',\n};\n\n// ! ====== for component Home popular movies ======\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n\n  return data.results;\n};\n\n// ! ====== for component Movies search movies ======\nexport const searchMovies = async (query, page = 1) => {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=${page}`);\n\n  return data.results;\n};\n\n// ! ====== for details info about movie ======\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}`);\n\n  return data;\n};\n\n// ! ====== get info about the cast of movie ======\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n\n  return data;\n};\n\n// ! ====== get info about the rewiews of movie ======\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n\n  return data;\n};\n","const API_KEY = '839ee1ac45e2249141bd738796b376ad';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport { API_KEY, BASE_URL };\n","import styled from 'styled-components';\n\nexport const CredList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { CredList } from './Credits.styled';\n\nexport default function Credits({ credits }) {\n  return (\n    <CredList>\n      {credits.map(({ id, name, profilePath }) => {\n        return (\n          <li key={id}>\n            <img\n              src={\n                profilePath\n                  ? `https://image.tmdb.org/t/p/w500${profilePath}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/No-image-available.jpg/640px-No-image-available.jpg`\n              }\n              alt={name}\n            />\n\n            <h2>{name ? name : 'Without  name'}</h2>\n          </li>\n        );\n      })}\n    </CredList>\n  );\n}\n\nCredits.propTypes = {\n  credits: PropTypes.array.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'Services/Api';\nimport ErrorMessageToUser from './ErrorOccurred';\nimport Credits from './Credits/Credits';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(data => {\n        if (data.length === 0) {\n          setError('There is no information about the cast');\n          return;\n        }\n        // prepare info about all actors\n        const castInfo = data.cast.map(({ id, name, profile_path }) => ({\n          id,\n          name,\n          profilePath: profile_path,\n        }));\n\n        setCredits(castInfo);\n      })\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <ErrorMessageToUser message={error} />}\n      {credits && <Credits credits={credits} />}\n    </div>\n  );\n};\n\nexport default Cast;\n","import PropTypes from 'prop-types';\n\nexport default function ErrorMessageToUser({ message }) {\n  return (\n    <div>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nErrorMessageToUser.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n"],"names":["axios","api_key","adult","language","getTrendingMovies","data","results","searchMovies","query","page","getMovieDetails","movieId","getMovieCredits","getMovieReviews","CredList","styled","Credits","credits","map","id","name","profilePath","src","alt","useParams","useState","setCredits","error","setError","useEffect","then","length","castInfo","cast","profile_path","catch","message","ErrorMessageToUser"],"sourceRoot":""}